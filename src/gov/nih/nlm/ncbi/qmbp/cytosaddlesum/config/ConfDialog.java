//
// ===========================================================================
//
//                            PUBLIC DOMAIN NOTICE
//               National Center for Biotechnology Information
//
//  This software/database is a "United States Government Work" under the
//  terms of the United States Copyright Act.  It was written as part of
//  the author's official duties as a United States Government employee and
//  thus cannot be copyrighted.  This software/database is freely available
//  to the public for use. The National Library of Medicine and the U.S.
//  Government have not placed any restriction on its use or reproduction.
//
//  Although all reasonable efforts have been taken to ensure the accuracy
//  and reliability of the software and data, the NLM and the U.S.
//  Government do not and cannot warrant the performance or results that
//  may be obtained by using this software or data. The NLM and the U.S.
//  Government disclaim all warranties, express or implied, including
//  warranties of performance, merchantability or fitness for any particular
//  purpose.
//
//  Please cite the author in any work or product based on this material.
//
// ===========================================================================
//
// Code authors:  Aleksandar Stojmirovic, Alexander Bliskovsky
//

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConfDialog.java
 *
 * Created on Aug 29, 2011, 11:30:23 PM
 */

package gov.nih.nlm.ncbi.qmbp.cytosaddlesum.config;

import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.WindowConstants;


/**
 *
 * @author aleksand
 */


public class ConfDialog extends javax.swing.JDialog {

    private String etdInfoPath;

    private Boolean etdFilesOk = false;
    private Boolean execDirOk = false;

    private Color errorColor = new Color(242,94,101);
    private Color defaultColor = new Color(255,255,255);

    /** Creates new form ConfDialog */
    public ConfDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
	setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        initComponents();
        reset();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        queryLocationButtons = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        localQueryButton = new javax.swing.JRadioButton();
        webQueryButton = new javax.swing.JRadioButton();
        OKButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        tdbFilesField = new javax.swing.JTextField();
        tdbFilesButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        webUrlField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ssumExecField = new javax.swing.JTextField();
        ssumExecButton = new javax.swing.JButton();
        errorMessageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CytoSaddleSum Configuration");
        setMinimumSize(new java.awt.Dimension(565, 305));
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(559, 305));

        queryLocationButtons.add(localQueryButton);
        localQueryButton.setFont(new java.awt.Font("Arial", 0, 14));
        localQueryButton.setForeground(new java.awt.Color(0, 51, 102));
        localQueryButton.setText("Local query");
        localQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localQueryButtonActionPerformed(evt);
            }
        });

        queryLocationButtons.add(webQueryButton);
        webQueryButton.setFont(new java.awt.Font("Arial", 0, 14));
        webQueryButton.setForeground(new java.awt.Color(0, 51, 102));
        webQueryButton.setSelected(true);
        webQueryButton.setText("Web query");
        webQueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webQueryButtonActionPerformed(evt);
            }
        });

        OKButton.setFont(new java.awt.Font("Arial", 0, 15));
        OKButton.setText("OK");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("Arial", 0, 15));
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("Local term database directory");

        tdbFilesField.setFont(new java.awt.Font("Arial", 0, 14));
        tdbFilesField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tdbFilesFieldFocusLost(evt);
            }
        });

        tdbFilesButton.setFont(new java.awt.Font("Arial", 0, 15));
        tdbFilesButton.setText("Browse ...");
        tdbFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tdbFilesButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel2.setForeground(new java.awt.Color(0, 51, 102));
        jLabel2.setText("Web query URL");

        webUrlField.setFont(new java.awt.Font("Arial", 0, 14));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14));
        jLabel3.setForeground(new java.awt.Color(0, 51, 102));
        jLabel3.setText("Local SaddleSum executable");

        ssumExecField.setFont(new java.awt.Font("Arial", 0, 14));
        ssumExecField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ssumExecFieldFocusLost(evt);
            }
        });

        ssumExecButton.setFont(new java.awt.Font("Arial", 0, 15));
        ssumExecButton.setText("Browse ...");
        ssumExecButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssumExecButtonActionPerformed(evt);
            }
        });

        errorMessageLabel.setFont(new java.awt.Font("Arial", 0, 14));
        errorMessageLabel.setForeground(new java.awt.Color(153, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(errorMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(webUrlField, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ssumExecField, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tdbFilesField, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(localQueryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(webQueryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tdbFilesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssumExecButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OKButton)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(localQueryButton)
                            .addComponent(webQueryButton)
                            .addComponent(resetButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(tdbFilesField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tdbFilesButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(ssumExecField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ssumExecButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(webUrlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 579, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKButtonActionPerformed
	// Check if any of the configuration settings have been changed.
        
        String tdbPath = tdbFilesField.getText();
        String execPath = ssumExecField.getText();
        Boolean isLocal = localQueryButton.isSelected();
        String serverUrl = webUrlField.getText();
        Boolean isChanged;

        isChanged = (Configuration.getTDBPath().equals(tdbPath)) ||
                    (Configuration.getExecPath().equals(execPath)) ||
                    (Configuration.getServerUrl().equals(serverUrl)) ||
                    (Configuration.isLocalQuery() == isLocal);
        
        Configuration.refresh(tdbPath, execPath, etdInfoPath, isLocal,
                              serverUrl, isChanged);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_OKButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        reset();
}//GEN-LAST:event_resetButtonActionPerformed

    private void tdbFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tdbFilesButtonActionPerformed
        JFileChooser tdbFilesChooser = new JFileChooser(tdbFilesField.getText());
        tdbFilesChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int rValue = tdbFilesChooser.showOpenDialog(this);
        if (rValue == JFileChooser.APPROVE_OPTION){
            tdbFilesField.setText(tdbFilesChooser.getSelectedFile().getAbsolutePath());
	    checkEtd(tdbFilesChooser.getSelectedFile());

        }

    }//GEN-LAST:event_tdbFilesButtonActionPerformed

    private void ssumExecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssumExecButtonActionPerformed

        JFileChooser ssumExecChooser = new JFileChooser(ssumExecField.getText());
        ssumExecChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int rValue = ssumExecChooser.showOpenDialog(this);
        if (rValue == JFileChooser.APPROVE_OPTION){

	    checkExec(ssumExecChooser.getSelectedFile());
	    ssumExecField.setText(ssumExecChooser.getSelectedFile().getAbsolutePath());

        }
    }//GEN-LAST:event_ssumExecButtonActionPerformed

private void webQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webQueryButtonActionPerformed

        resetColors();
        ssumExecButton.setEnabled(false);
        ssumExecField.setEnabled(false);

        tdbFilesButton.setEnabled(false);
        tdbFilesField.setEnabled(false);

        webUrlField.setEnabled(true);
        OKButton.setEnabled(true);
}//GEN-LAST:event_webQueryButtonActionPerformed

private void localQueryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localQueryButtonActionPerformed

        resetColors();
        ssumExecButton.setEnabled(true);
        ssumExecField.setEnabled(true);

        tdbFilesButton.setEnabled(true);
        tdbFilesField.setEnabled(true);

        webUrlField.setEnabled(false);
        checkOk();
}//GEN-LAST:event_localQueryButtonActionPerformed

private void ssumExecFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ssumExecFieldFocusLost
        checkOk();
}//GEN-LAST:event_ssumExecFieldFocusLost

private void tdbFilesFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tdbFilesFieldFocusLost
        checkOk();
}//GEN-LAST:event_tdbFilesFieldFocusLost

    private void reset() {
	tdbFilesField.setText(Configuration.getTDBPath());

        ssumExecField.setText(Configuration.getExecPath());
        etdInfoPath = Configuration.getETDInfoPath();

        webUrlField.setText(Configuration.getServerUrl());

	// If not local
	if (!Configuration.isLocalQuery()) {
	    webQueryButton.setSelected(true);

	    ssumExecButton.setEnabled(false);
	    ssumExecField.setEnabled(false);

	    tdbFilesButton.setEnabled(false);
	    tdbFilesField.setEnabled(false);

	    webUrlField.setEnabled(true);
            OKButton.setEnabled(true);
	}
	else {
	    localQueryButton.setSelected(true);

	    ssumExecButton.setEnabled(true);
	    ssumExecField.setEnabled(true);

	    tdbFilesButton.setEnabled(true);
	    tdbFilesField.setEnabled(true);

	    webUrlField.setEnabled(false);
            checkOk();
	}

    }

    private void resetColors() {
	errorMessageLabel.setText("");
	ssumExecField.setBackground(defaultColor);
	tdbFilesField.setBackground(defaultColor);
    }

    private void checkExec(File execFile) {

	resetColors();

	File execDir = execFile.getParentFile();
	File etdInfoFile = new File(execDir + "/saddlesum-show-etd");

	if (!execFile.exists()) {
	    errorMessageLabel.setText("The specified file does not exist.");
	    ssumExecField.setBackground(errorColor);
            execDirOk = false;
	    return;
	}

	if (etdInfoFile.exists()) {
	    etdInfoPath = etdInfoFile.getAbsolutePath();
	    execDirOk = true;
	}
	else {
	    errorMessageLabel.setText("\"saddlesum-show-etd\" not found.");
	    ssumExecField.setBackground(errorColor);
	    execDirOk = false;
	}
    }

    private void checkEtd(File path) {

	// If the paths are the same, the entry has already been checked.
	resetColors();

	if (!path.exists()){
	    etdFilesOk = false;
	    tdbFilesField.setBackground(errorColor);
	    errorMessageLabel.setText("The specified directory does not exist.");
	    return;
	}

	String[] files = path.list();
	int etdFilesCount = 0;

	for (int i = 0; i < files.length; i++){
	    if (files[i].matches("^.+\\.etd$")){
		etdFilesCount++;
	    }
	}

	if (etdFilesCount > 0) {
	    etdFilesOk = true;
	}
	else {
	    tdbFilesField.setBackground(errorColor);
	    errorMessageLabel.setText("No .etd files found in the specified directory.");
	    etdFilesOk = false;
	}
    }

    private void checkOk() {

        checkExec(new File(ssumExecField.getText()));
        if (execDirOk) {
            checkEtd(new File(tdbFilesField.getText()));
        }

	if (execDirOk) {
            OKButton.setEnabled(true);
        }
	else {
            OKButton.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKButton;
    private javax.swing.JLabel errorMessageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton localQueryButton;
    private javax.swing.ButtonGroup queryLocationButtons;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton ssumExecButton;
    private javax.swing.JTextField ssumExecField;
    private javax.swing.JButton tdbFilesButton;
    private javax.swing.JTextField tdbFilesField;
    private javax.swing.JRadioButton webQueryButton;
    private javax.swing.JTextField webUrlField;
    // End of variables declaration//GEN-END:variables

}
